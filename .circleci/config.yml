version: 2.1
executors:
  builder:
    docker:
      - image: circleci/node:16.13.1

jobs:
  install:
    executor: builder
    steps:
      - checkout
      - run:
          name: 'Install'
          command: npm ci
      - persist_to_workspace:
          root: ./
          paths:
            - ./*
  build:
    executor: builder
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: 'Build'
          command: npm run build
  unit:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Unit Tests'
          command: npm run test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
      - store_artifacts:
          path: coverage
  e2e:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'E2E Tests'
          command: npm run e2e
  version:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          command: echo "" > old_version && echo "" > new_version
      - run:
          name: 'Version'
          command: npx semantic-release
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - old_version
            - new_version
  build-docker:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 20.10.11
      - attach_workspace:
          at: .
      - run:
          name: 'Build Docker Image'
          command: |
            OLD_VERSION=$(cat old_version)
            NEW_VERSION=$(cat new_version)
            echo "From ${OLD_VERSION} to ${NEW_VERSION}"
            if [[ -z "${NEW_VERSION}" ]]; then
              echo "No new version. Skip docker build."
            else
              echo "Building garredow/foxcasts-api-v1:${NEW_VERSION}"
              echo $(cat package.json)
              echo $DOCKER_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
              docker build -t garredow/foxcasts-api-v1:$NEW_VERSION .
              docker push garredow/foxcasts-api-v1:$NEW_VERSION
            fi
  deploy:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Deploy'
          command: |
            OLD_VERSION=$(cat old_version)
            NEW_VERSION=$(cat new_version)
            echo "From ${OLD_VERSION} to ${NEW_VERSION}"
            if [[ -z "${NEW_VERSION}" ]]; then
              echo "No new version. Skip deploy."
            else
              echo "Deploying v${NEW_VERSION}"
              ssh -oStrictHostKeyChecking=no -v $AWS_USER@$AWS_IP_ADDRESS "./apps/foxcasts-api-v1/install.sh garredow/foxcasts-api-v1:${NEW_VERSION}"
            fi

workflows:
  build-and-test:
    jobs:
      - install
      - build:
          requires:
            - install
      - unit:
          requires:
            - install
      - e2e:
          requires:
            - install
      - version:
          context: github-versioning
          requires:
            - build
            - unit
            - e2e
          filters:
            branches:
              only:
                - main
      # - build-docker:
      #     context: docker-hub
      #     requires:
      #       - version
      #     filters:
      #       branches:
      #         only:
      #           - main
      # - deploy:
      #     context: aws
      #     requires:
      #       - build-docker
      #     filters:
      #       branches:
      #         only:
      #           - main
